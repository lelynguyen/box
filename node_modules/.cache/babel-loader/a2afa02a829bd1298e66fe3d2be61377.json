{"ast":null,"code":"/**\n * Enhanced random function, selects a random value between a minimum and maximum. If the values provided are both\n * integers then the number returned will be an integer, otherwise the return number will be a decimal.\n * @param min The minimum value\n * @param max The maximum value\n */\nexport function random(min, max) {\n  const randomNumber = Math.random() * (max - min + 1) + min;\n  if (!Number.isInteger(min) || !Number.isInteger(max)) {\n    return randomNumber;\n  } else {\n    return Math.floor(randomNumber);\n  }\n}\n/**\n * Linear interpolation function to gradually step towards a target value\n * @param start The current value\n * @param end The target value\n * @param normal The rate of change between 0 and 1 (0 = no change, 1 = instant)\n */\nexport function lerp(start, end, normal) {\n  return (1 - normal) * start + normal * end;\n}\n/**\n * Selects a random item from an array of inputs.\n *\n * @param items The array of items to choose from\n * @returns A random item selected from the array\n */\nexport function randomElement(items) {\n  const index = Math.floor(Math.random() * items.length);\n  return items[index];\n}\n/**\n * Gets the height and width of the provided HTML element\n * @param element The html element to measure\n */\nexport function getSize(element) {\n  if (!element) return {\n    height: 0,\n    width: 0\n  };\n  return {\n    height: element.offsetHeight,\n    width: element.offsetWidth\n  };\n}\n/**\n * Store the value of PI * 2.\n *\n * This is so we can avoid calculating this value every time we draw a circle.\n */\nexport const twoPi = Math.PI * 2;","map":{"version":3,"names":["random","min","max","randomNumber","Math","Number","isInteger","floor","lerp","start","end","normal","randomElement","items","index","length","getSize","element","height","width","offsetHeight","offsetWidth","twoPi","PI"],"sources":["../src/utils.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;;AAMA,OAAM,SAAUA,MAAMA,CAACC,GAAW,EAAEC,GAAW;EAC7C,MAAMC,YAAY,GAAGC,IAAI,CAACJ,MAAM,EAAE,IAAIE,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG;EAE1D,IAAI,CAACI,MAAM,CAACC,SAAS,CAACL,GAAG,CAAC,IAAI,CAACI,MAAM,CAACC,SAAS,CAACJ,GAAG,CAAC,EAAE;IACpD,OAAOC,YAAY;EACrB,CAAC,MAAM;IACL,OAAOC,IAAI,CAACG,KAAK,CAACJ,YAAY,CAAC;EACjC;AACF;AAEA;;;;;;AAMA,OAAM,SAAUK,IAAIA,CAACC,KAAa,EAAEC,GAAW,EAAEC,MAAc;EAC7D,OAAO,CAAC,CAAC,GAAGA,MAAM,IAAIF,KAAK,GAAGE,MAAM,GAAGD,GAAG;AAC5C;AAEA;;;;;;AAMA,OAAM,SAAUE,aAAaA,CAAIC,KAAU;EACzC,MAAMC,KAAK,GAAGV,IAAI,CAACG,KAAK,CAACH,IAAI,CAACJ,MAAM,EAAE,GAAGa,KAAK,CAACE,MAAM,CAAC;EACtD,OAAOF,KAAK,CAACC,KAAK,CAAC;AACrB;AAEA;;;;AAIA,OAAM,SAAUE,OAAOA,CAACC,OAA4B;EAClD,IAAI,CAACA,OAAO,EAAE,OAAO;IAAEC,MAAM,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAC,CAAE;EAE5C,OAAO;IACLD,MAAM,EAAED,OAAO,CAACG,YAAY;IAC5BD,KAAK,EAAEF,OAAO,CAACI;GAChB;AACH;AAEA;;;;;AAKA,OAAO,MAAMC,KAAK,GAAGlB,IAAI,CAACmB,EAAE,GAAG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}