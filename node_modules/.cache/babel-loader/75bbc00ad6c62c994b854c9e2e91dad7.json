{"ast":null,"code":"import React, { useEffect, useRef } from 'react';\nimport { SnowfallCanvas } from './SnowfallCanvas.js';\nimport { defaultConfig } from './Snowflake.js';\nimport { useComponentSize, useDeepMemo, useSnowfallStyle } from './hooks.js';\nexport const Snowfall = ({\n  color = defaultConfig.color,\n  changeFrequency = defaultConfig.changeFrequency,\n  radius = defaultConfig.radius,\n  speed = defaultConfig.speed,\n  wind = defaultConfig.wind,\n  rotationSpeed = defaultConfig.rotationSpeed,\n  opacity = defaultConfig.opacity,\n  snowflakeCount = 150,\n  images,\n  style\n} = {}) => {\n  const mergedStyle = useSnowfallStyle(style);\n  const canvasRef = useRef(null);\n  const canvasSize = useComponentSize(canvasRef);\n  const config = useDeepMemo({\n    color,\n    changeFrequency,\n    radius,\n    speed,\n    wind,\n    rotationSpeed,\n    images,\n    snowflakeCount,\n    opacity\n  });\n  // A reference to the config used for creating the initial instance\n  const configRef = useRef(config);\n  const snowfallCanvasRef = useRef();\n  useEffect(() => {\n    if (!snowfallCanvasRef.current && canvasRef.current) {\n      snowfallCanvasRef.current = new SnowfallCanvas(canvasRef.current, configRef.current);\n    }\n    return () => {\n      var _a;\n      (_a = snowfallCanvasRef.current) === null || _a === void 0 ? void 0 : _a.pause();\n      snowfallCanvasRef.current = undefined;\n    };\n  }, []);\n  useEffect(() => {\n    if (snowfallCanvasRef.current) {\n      snowfallCanvasRef.current.updateConfig(config);\n    }\n  }, [config]);\n  return React.createElement(\"canvas\", {\n    ref: canvasRef,\n    height: canvasSize.height,\n    width: canvasSize.width,\n    style: mergedStyle,\n    \"data-testid\": \"SnowfallCanvas\"\n  });\n};\nexport default Snowfall;","map":{"version":3,"names":["React","useEffect","useRef","SnowfallCanvas","defaultConfig","useComponentSize","useDeepMemo","useSnowfallStyle","Snowfall","color","changeFrequency","radius","speed","wind","rotationSpeed","opacity","snowflakeCount","images","style","mergedStyle","canvasRef","canvasSize","config","configRef","snowfallCanvasRef","current","_a","pause","undefined","updateConfig","createElement","ref","height","width"],"sources":["../src/Snowfall.tsx"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,cAAc,QAA8B,qBAAqB;AAC1E,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,gBAAgB,EAAEC,WAAW,EAAEC,gBAAgB,QAAQ,YAAY;AAS5E,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EACvBC,KAAK,GAAGL,aAAa,CAACK,KAAK;EAC3BC,eAAe,GAAGN,aAAa,CAACM,eAAe;EAC/CC,MAAM,GAAGP,aAAa,CAACO,MAAM;EAC7BC,KAAK,GAAGR,aAAa,CAACQ,KAAK;EAC3BC,IAAI,GAAGT,aAAa,CAACS,IAAI;EACzBC,aAAa,GAAGV,aAAa,CAACU,aAAa;EAC3CC,OAAO,GAAGX,aAAa,CAACW,OAAO;EAC/BC,cAAc,GAAG,GAAG;EACpBC,MAAM;EACNC;AAAK,IACY,EAAE,KAAiB;EACpC,MAAMC,WAAW,GAAGZ,gBAAgB,CAACW,KAAK,CAAC;EAE3C,MAAME,SAAS,GAAGlB,MAAM,CAAoB,IAAI,CAAC;EACjD,MAAMmB,UAAU,GAAGhB,gBAAgB,CAACe,SAAS,CAAC;EAE9C,MAAME,MAAM,GAAGhB,WAAW,CAAuB;IAC/CG,KAAK;IACLC,eAAe;IACfC,MAAM;IACNC,KAAK;IACLC,IAAI;IACJC,aAAa;IACbG,MAAM;IACND,cAAc;IACdD;GACD,CAAC;EAEF;EACA,MAAMQ,SAAS,GAAGrB,MAAM,CAACoB,MAAM,CAAC;EAEhC,MAAME,iBAAiB,GAAGtB,MAAM,EAAkB;EAElDD,SAAS,CAAC,MAAK;IACb,IAAI,CAACuB,iBAAiB,CAACC,OAAO,IAAIL,SAAS,CAACK,OAAO,EAAE;MACnDD,iBAAiB,CAACC,OAAO,GAAG,IAAItB,cAAc,CAACiB,SAAS,CAACK,OAAO,EAAEF,SAAS,CAACE,OAAO,CAAC;IACtF;IAEA,OAAO,MAAK;;MACV,CAAAC,EAAA,GAAAF,iBAAiB,CAACC,OAAO,cAAAC,EAAA,uBAAAA,EAAA,CAAEC,KAAK,EAAE;MAClCH,iBAAiB,CAACC,OAAO,GAAGG,SAAS;IACvC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN3B,SAAS,CAAC,MAAK;IACb,IAAIuB,iBAAiB,CAACC,OAAO,EAAE;MAC7BD,iBAAiB,CAACC,OAAO,CAACI,YAAY,CAACP,MAAM,CAAC;IAChD;EACF,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,OACEtB,KAAA,CAAA8B,aAAA;IACEC,GAAG,EAAEX,SAAS;IACdY,MAAM,EAAEX,UAAU,CAACW,MAAM;IACzBC,KAAK,EAAEZ,UAAU,CAACY,KAAK;IACvBf,KAAK,EAAEC,WAAW;IAAA,eACN;EAAgB,EAC5B;AAEN,CAAC;AAED,eAAeX,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}